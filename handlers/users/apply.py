from aiogram import types
from aiogram.types import ReplyKeyboardRemove
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from loader import dp, db
from states import Order
from keyboards.default import menu, go_back
from utils.notify_admins import order_notify

@dp.message_handler(text="üì® –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
@dp.message_handler(commands=['order'])
async def order(message: types.Message, state: FSMContext):
    await state.reset_state()
    await message.answer(f"*–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É*\n\n"
                         f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤–∞—à–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≥–æ—Ä—å, 89991232233).\n"
                         f"–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π\n", reply_markup=go_back)

    await Order.Order1.set()


@dp.message_handler(state=Order.Order1)
async def answer_order(message: types.Message, state: FSMContext):
    contact = message.text

    if contact == "‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞":
        from handlers.users.start import register_user
        await state.finish()
        return await register_user(message)
        
    else:
        await db.add_new_order(contact)

        user_id = types.User.get_current().id
        user_name = types.User.get_current().full_name
        admin_notify = "–ó–∞—è–≤–∫–∞: {} \n–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [{}](tg://user?id={})".format(contact, user_name, user_id)
        await order_notify(dp, admin_notify)
        
        await message.answer(f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: {contact}\n"
                         f"–°–ø–∞—Å–∏–±–æ, –º—ã –æ—á–µ–Ω—å —Å–∫–æ—Ä–æ –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º!\n", reply_markup=menu)

        await state.finish()



